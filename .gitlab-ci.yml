#################################################################
#								#
# Copyright (c) 2020 YottaDB LLC and/or its subsidiaries.	#
# All rights reserved.						#
#								#
#	This source code contains the intellectual property	#
#	of its copyright holder(s), and is made available	#
#	under a license.  If you do not know the terms of	#
#	the license, please stop and do not read further.	#
#								#
#################################################################
#
image: docker:latest

services:
  - docker:dind

stages:
 - build
 - test
 - push

build:
  artifacts:
    paths:
      - docker-images
  stage: build
  script:
    - mkdir docker-images
    - docker build --pull -t yottadb/yottadbgui:latest -f Dockerfile .
    - docker save yottadb/yottadbgui:latest > docker-images/app.tar

commit-verify:
  image: ubuntu:18.04
  stage: build
  before_script:
    - apt-get update -qq && apt-get install -y -qq git wget gnupg
  script:
    # Copy commit gpg key verify script to build directory and execute
    - wget https://gitlab.com/YottaDB/DB/YDB/-/raw/master/ci/commit_verify.sh
    - chmod +x commit_verify.sh
    - ./commit_verify.sh test/needs_copyright.sh
  rules:
    - if: '$CI_PIPELINE_SOURCE == "external_pull_request" || $CI_PIPELINE_SOURCE == "merge_request_event"'


munit:
  stage: test
  script:
    - docker load -i docker-images/app.tar
    - docker run -itd -p 8080:8080 --name ydbgui yottadb/yottadbgui:latest
    - sleep 10
    - docker exec -t ydbgui bash -c 'source ./env && ydb_routines="r $ydb_routines" mumps -run ^GDEWEBT'

artifact:
  stage: push
  artifacts:
    paths:
      - gui
      - r
  script:
    - docker load -i docker-images/app.tar
    - docker run -itd -p 8080:8080 --name ydbgui yottadb/yottadbgui:latest
    - docker cp ydbgui:/opt/yottadb/gui/dist ./gui
    - docker cp ydbgui:/opt/yottadb/gui/r/ .
    - rm -f gui/*.mj*

push:
  stage: push
  script:
    - docker login -u $HUB_USERNAME -p $HUB_PASSWORD
    - docker load -i docker-images/app.tar
    - docker tag yottadb/yottadbgui:latest yottadb/yottadbgui:latest-master
    - docker push yottadb/yottadbgui:latest-master
  only:
    - master@YottaDB/UI/YDBGDEGUI

push-release:
  stage: push
  script:
    - docker login -u $HUB_USERNAME -p $HUB_PASSWORD
    - docker load -i docker-images/app.tar
    - docker push yottadb/yottadbgui:latest
  only:
    - tag
